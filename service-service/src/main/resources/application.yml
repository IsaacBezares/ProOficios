spring:
  jpa:
    database: postgresql
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: "jdbc:postgresql://localhost:5432/service-service"
    username: "postgres"
    password: "password"
  mvc:
    format:
      date: yyyy-MM-dd
      date-time: yyyy-MM-dd HH:mm:ss
      time: HH:m-m:ss
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: "serviceGroup"
      properties:
        spring.json.trusted.packages: org.bessarez.prooficios.service.event
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.type.mapping: addWorkerServices:org.bessarez.prooficios.service.event.WorkerServicesRequest,removeWorkerServices:org.bessarez.prooficios.service.event.WorkerServicesRequest
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/prooficos-realm
  application:
    name: service-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

server:
  port: 0